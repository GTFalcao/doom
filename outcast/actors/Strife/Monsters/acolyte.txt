
actor AcolyteClass : MonsterPawnStrife
{
	player.morphweapon "AcolyteWeapon"
	health 70
	player.maxhealth 70
	gibhealth 35
	player.soundclass "acol"
	states
	{
		Spawn:
			AGRD A 5 A_Jump(16,"Look1","Look2")
			loop
		Look1:
			AGRD B 8
			AGRD B 8 A_Jump(128,"Spawn")
			goto Spawn
		Look2:
			AGRD D 8
			AGRD D 8 A_Jump(128,"Spawn")
			goto Spawn
		See:
			AGRD ABCD 6
			loop
		Pain:
			AGRD O 6 A_PlaySound("acolyte/pain",2)
			goto Spawn
		Missile:
			AGRD E 8
			AGRD F 4 bright
			AGRD E 4
			AGRD F 6 bright
			goto Spawn
		Melee:
			AGRD A 1 A_PlaySound("acolyte/sight",2)
			goto Spawn
		Death:
			AGRD G 0 A_JumpIfInventory("InvisOn",1,"SetShadow")
    		AGRD G 4
			AGRD H 4 A_PlayerScream
			AGRD IJ 4
			AGRD K 3 A_NoBlocking
			AGRD LM 3
			AGRD N -1
			stop
  		XDeath:
			GIBS A 5 A_NoBlocking
			GIBS B 5 A_PlaySound("strifegib",2)
			GIBS C 5 A_TossGib
			GIBS DEF 4 A_TossGib
			GIBS GH 4
			GIBS I 5
			GIBS J 5
			GIBS K 5
			GIBS L 1400
			GIBS L 10 A_CheckPlayerDone
			wait
		SetShadow:
			AGRD G 0 A_SetTranslucent(0.4)
			goto Death+1
		Burn:
			BURN A 3 Bright A_PlaySound("human/imonfire",2)
			BURN BC 3 Bright A_SpawnItemEx("FireDroplet",0,0,24,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(0.1,1.0),0,32)
			BURN D 3 Bright A_NoBlocking
			BURN E 5 Bright A_SpawnItemEx("FireDroplet",0,0,24,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(0.1,1.0),0,32)
			BURN FGH 5 Bright
			BURN IJ 5 Bright A_SpawnItemEx("FireDroplet",0,0,24,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(0.1,1.0),0,32)
			BURN KL 5 Bright
			BURN MN 5 Bright A_SpawnItemEx("FireDroplet",0,0,24,frandom(-1.0,1.0),frandom(-1.0,1.0),frandom(0.1,1.0),0,32)
			BURN OPQPQ 5 Bright
			BURN RSTU 7 Bright
			BURN V -1
			stop
		Disintegrate:
			DISR A 5 A_PlaySound("misc/disruptordeath",2)
			DISR BC 5
			DISR D 5 A_NoBlocking
			DISR EF 5
			DISR GHIJ 4
			MEAT D 700
			MEAT D 10 A_CheckPlayerDone
			wait
	}
}

actor AcolyteWeapon : RebelWeapon
{
	obituary "%o was zealously shot down by %k."
	weapon.ammotype1 "MonsterManaGreen"
	weapon.sisterweapon "AcolyteWeaponPowered"
	+WEAPON.NOALERT
	states
	{
		Fire:
			WPS0 B 4
			WPS0 C 4 A_AlertMonsters
			WPS0 F 0 A_TakeInventory("MonsterManaGreen",1)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 E 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 E 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 D 4 bright
			WPS0 C 64 A_JumpIfInventory("MonsterManaGreen",1,1)
			WPS0 C 8
			WPS0 B 5 A_ReFire
			goto Ready
		Hold:
			WPS0 C 8
			WPS0 F 0 A_TakeInventory("MonsterManaGreen",1)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 E 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 E 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 4 bright A_FireCustomMissile("StandardBulletStrife",random(-6,6),0,0,9)
			WPS0 D 4 bright
			WPS0 C 64 A_JumpIfInventory("MonsterManaGreen",1,1)
			WPS0 C 8
			WPS0 B 5 A_ReFire
			goto Ready
		AltFire:
			WPS0 A 0 A_GunFlash
			WPS0 A 0 A_JumpIfInventory("PowerShadow",1,"TakeInvis")
			WPS0 A 0 A_GiveInventory("InvisOn",1)
			WPS0 A 12 A_GiveInventory("MonShadow",1)
			goto Ready
		TakeInvis:
			WPS0 A 0 A_TakeInventory("InvisOn",1)
			WPS0 A 12 A_TakeInventory("PowerShadow",1)
			goto Ready
	}
}

actor AcolyteWeaponPowered : AcolyteWeapon
{
	weapon.sisterweapon "AcolyteWeapon"
	+WEAPON.POWERED_UP
	states
	{
		Fire:
		Hold:
			WPS0 C 0 A_AlertMonsters
			WPS0 CCCCCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 F 0 A_TakeInventory("MonsterManaGreen",1)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 0 A_FireCustomMissile("StandardBulletStrifePowered",0,0,0,9)
			WPS0 FFFF 1 bright A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 E 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 E 0 A_FireCustomMissile("StandardBulletStrifePowered",0,0,0,9)
			WPS0 EEEE 1 bright A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 F 0 A_TakeInventory("MonsterManaGreen",1)
			WPS0 F 0 A_PlaySound("monsters/rifle",CHAN_WEAPON)
			WPS0 F 0 A_FireCustomMissile("StandardBulletStrifePowered",0,0,0,9)
			WPS0 FFFF 1 bright A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 DDDD 1 bright A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 C 0 A_JumpIfInventory("MonsterManaGreen",1,"Finish")
			goto DelayLaser
		Finish:
			WPS0 CCCCCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			WPS0 C 0 A_ReFire
			WPS0 CCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			goto Ready
		DelayLaser:
			WPS0 CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			goto Finish
		AltFire:
			WPS0 C 0 A_GunFlash
			WPS0 C 0 A_JumpIfInventory("PowerShadow",1,"TakeInvis")
			WPS0 C 0 A_GiveInventory("InvisOn",1)
			WPS0 C 0 A_GiveInventory("MonShadow",1)
			WPS0 CCCCCCCCCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			goto Ready
		TakeInvis:
			WPS0 C 0 A_TakeInventory("InvisOn",1)
			WPS0 C 0 A_TakeInventory("PowerShadow",1)
			WPS0 CCCCCCCCCCCC 1 A_SpawnItemEx("AssaultGunPoweredLaser",0,0,41,512 * cos(angle),512 * sin(angle),512 * sin(-pitch),0,SXF_NOCHECKPOSITION|SXF_CLIENTSIDE|SXF_ABSOLUTEVELOCITY)
			goto Ready
	}
}

actor ChooseAcolyte : MonsterMorph
{
	tag "Acolyte"
	inventory.icon "ARTIAGRD"
	states
	{
		Use:
			TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(455,7) > 0,"Check")
			goto DoMorph
		Check:
			TNT1 A 0 A_SpawnItemEx("AcolyteHitboxCheck2",0,0,0,cos(angle),sin(angle),1)
			fail
		DoMorph:
			TNT1 A 0 ACS_ExecuteAlways(453,0,3,2)
			TNT1 A 0 ACS_ExecuteAlways(450,0,0,2)
			stop
	}
}

actor AcolyteMorph : MonsterMorph
{
	tag "Acolyte"
	inventory.icon "ARTIAGRD"
	states
	{
		Use:
			TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(455,7) > 0,"Check")
			goto DoMorph
		Check:
			TNT1 A 0 A_SpawnItemEx("AcolyteHitboxCheck",0,0,0,cos(angle),sin(angle),1)
			fail
		DoMorph:
			TNT1 A 0 ACS_ExecuteAlways(450,0,0,2)
			stop
	}
}

actor AcolyteMorphDirect : MonsterMorphDirect
{
	states
	{
		Pickup:
			TNT1 A 0 ACS_ExecuteAlways(450,0,0,2)
			stop
	}
}

actor AcolyteHitboxCheck : BaseHitboxCheck
{
	states
	{
		Spawn:
			TNT1 A 1
			TNT1 A 0 A_GiveToTarget("AcolyteMorphDirect",1)
			stop
	}
}

actor AcolyteMorphDirect2 : MonsterMorphDirect
{
	states
	{
		Pickup:
			TNT1 A 0 ACS_ExecuteAlways(453,0,3,2)
			TNT1 A 0 ACS_ExecuteAlways(450,0,0,2)
			stop
	}
}

actor AcolyteHitboxCheck2 : BaseHitboxCheck
{
	states
	{
		Spawn:
			TNT1 A 1
			TNT1 A 0 A_GiveToTarget("AcolyteMorphDirect2",1)
			stop
	}
}

actor AcolyteMorpher : MonsterMorpher { powerup.type MorphAgrd }

actor PowerMorphAgrd : PowerMorphStrife { powermorph.playerclass "AcolyteClass" }