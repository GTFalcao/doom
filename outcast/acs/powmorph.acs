
#library 	"powmorph"

#import 	"variable.acs"
#import		"function.acs"

#include	"zcommon.acs"


/*

-------------------------------------------------------------------------------------

script 450 is responsible for morphing the player into a new monster
and removing all other morph items in their inventory.

also morphs a player into D'Sparil upon the serpent's death

-------------------------------------------------------------------------------------

*/

script 450 (int power, int subpower, int immacho)
{
    if(subpower == 10)   // D'Sparil gets back up to fight
    {
        FreezePawn();
        
        Delay(4);
        
        SetActorState(0,"PreFall");
        
        Delay(4);
        
        SetActorState(0,"Fall");
        
        Delay(131);
		
		if(CheckInventory("HasHexenArmor"))
			hexenarmor[me()] = CheckInventory("BasicArmor");
		TakeInventory("BasicArmor",999);
        
        TakeInventory("PowerInvulnerable",1);
        TakeInventory("PowerMorphSrcr",1);
        TakeInventory("PowerMorphSrcrHitbox",1);
        Delay(1);
		
		if(GetCVar("outcast_hitbox"))
			GiveInventory("TysonMorpherHitbox",1);
		else
			GiveInventory("TysonMorpher",1);
			
        Delay(1);
        SetActorState(0,"Rise");
        GiveInventory("MonTempInvul",1);
        GiveInventory("MonRadSuit",1);
		GiveInventory("IsHeretic",1);
        VerifySpecies();
        
        Delay(38);
	
		if(hexenarmor[me()] > 0)
		{
			GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
			hexenarmor[me()] = 0;
		}
        
		if(!CheckWeapon("DSparilWeapon"))
			terminate;
		
        SetPlayerProperty(0,0,PROP_TOTALLYFROZEN);
        SetPlayerProperty(0,0,PROP_FROZEN);
        TakeInventory("PowerInvulnerable",1);
        AmbientSound("dsparil/sight",127);
		
		Delay(50);
		
		SetFont("SMALLFONT");
		HudMessage(s:"Use alt-fire to teleport!\nYou can create teleport destinations using your inventory item.";HUDMSG_FADEINOUT|HUDMSG_LOG,808,CR_ORANGE,0.3,0.4,7.0,0.3,0.3);
        
        terminate;
    }
    
		int spawnHealth = GetActorProperty(0, APROP_SPAWNHEALTH);
		int healthPercentage = 0;
		if (spawnHealth) {
			healthPercentage = GetActorProperty(0, APROP_HEALTH) * 10000 / spawnHealth;
		}

    ClearMorphs(0, true);
    TakeInventory("PowerInvulnerable",1);
    TakeInventory("PowerInvisibility",1);
    TakeInventory("PowerGhost",1);
	TakeInventory("PowerTempGhost",1);
    TakeInventory("PowerShadow",1);
    //TakeInventory("PowerShadowNoStack",1);
    TakeInventory("PowerFlight",1);
	TakeInventory("PowerWeaponLevel2",1);
	TakeInventory("PowerWeaponLevel20",1);
    Delay(1);
    //ActivatorSound("cube/unmorph",127);
    
    switch(PlayerClass(me()))
    {
        //////////////// 0 - Doom
        
        default:
        case 0:
        
        ClearPowers();
    
        Delay(1);
        SetPlayerProperty(0,1,0);
        ActivatorSound("unmorph/doom",127);
        ClearWeapons();
    
        Delay(1);
        
		if(GetCVar("outcast_hitbox"))
			GiveInventory(powermorphdoomhitbox[power],1);
		else
			GiveInventory(powermorphdoom[power],1);
			
		GiveInventory("MakeMeShootable",1);
		GiveInventory("IsDoom",1);

    if(GetCVar("outcast_keepmorphs") && healthPercentage) {
			SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
		}
        
        if(power == 10)      // Arachnotron spawn sequence
        {
            SetPlayerProperty(0,1,PROP_TOTALLYFROZEN);
            ActivatorSound("*taunt",127);
            Delay(1);
            SetActorState(0,"Init");
            GiveInventory("MonRadSuit",1);
            VerifySpecies();
	
			if(hexenarmor[me()] > 0)
			{
				GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
				hexenarmor[me()] = 0;
			}
            terminate;
        }
		
		else if(power == 12)
			AmbientSound("spider/sight",127);
		
		else if(power == 13)
			AmbientSound("cyber/sight",127);
			
		else
			ActivatorSound("*taunt",127);

        break;
        
        //////////////// 1 - Heretic
    
        case 1:
    
        ClearPowers();
    
        Delay(1);
        SetPlayerProperty(0,1,0);
        ActivatorSound("unmorph/heretic",127);
        ClearWeapons();
    
        Delay(1);
        
		if(GetCVar("outcast_hitbox"))
			GiveInventory(powermorphhtichitbox[power],1);
		else
			GiveInventory(powermorphhtic[power],1);
			
		GiveInventory("MakeMeShootable",1);
		GiveInventory("IsHeretic",1);

    if(GetCVar("outcast_keepmorphs") && healthPercentage) {
			SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
		}
		
		if(power == 11)
			AmbientSound("minotaur/sight",127);
		
		else if(power == 12)
			AmbientSound("dsparilserpent/sight",127);
			
		else
			ActivatorSound("*taunt",127);
    
        break;
        
        //////////////// 2 - Hexen
    
        case 2:
        
        ClearPowers();
        
        Delay(1);
        SetPlayerProperty(0,1,0);
        ActivatorSound("unmorph/hexen",127);
        ClearWeapons();
    
        Delay(1);
        
        if(immacho > 0)
		{
			if(GetCVar("outcast_hitbox"))
				GiveInventory(powermorphhex2hitbox[immacho],1);
			else
				GiveInventory(powermorphhex2[immacho],1);
		}
            
        else
        {
            TakeInventory("ZedekMorph",1);
            TakeInventory("TraductusMorph",1);
            TakeInventory("MenelkirMorph",1);
			
            if(!power)      // afrit spawn sequence
            {
				if(GetCVar("outcast_hitbox"))
					GiveInventory(powermorphhexnhitbox[0],1);
				else
					GiveInventory(powermorphhexn[0],1);
                //ActivatorSound("cube/morph",127);
                
                Delay(1);
                
                SetActorState(0,"Init");
                GiveInventory("MonRadSuit",1);
				GiveInventory("MonTempInvul",1);
                VerifySpecies();
				GiveInventory("MakeMeShootable",1);
				GiveInventory("IsHexen",1);

        if(GetCVar("outcast_keepmorphs") && healthPercentage) {
					SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
				}
	
				if(hexenarmor[me()] > 0)
				{
					GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
					hexenarmor[me()] = 0;
				}
                
                Delay(120);
				
				TakeInventory("PowerInvulnerable",1);
                /*
                SetFont("SMALLFONT");
                HudMessage(s:"To strafe as an \ckAfrit, \ciuse alt-fire.";HUDMSG_FADEINOUT|HUDMSG_LOG,808,CR_ORANGE,0.3,0.4,4.0,0.3,0.3);
                */
                terminate;
            }
            
			if(GetCVar("outcast_hitbox"))
				GiveInventory(powermorphhexnhitbox[power],1);
			else
				GiveInventory(powermorphhexn[power],1);
				
			if(power == 10)
				AmbientSound("DragonSight",127);
				
			else if(power == 11)
				AmbientSound("SorcererSight",127);
		
			else if(power == 12)
				AmbientSound("KoraxSight",127);
			
			else
				ActivatorSound("*taunt",127);
        }
    
		GiveInventory("MakeMeShootable",1);
		GiveInventory("IsHexen",1);

    if(GetCVar("outcast_keepmorphs") && healthPercentage) {
			SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
		}

        break;
        
        //////////////// 3 - Strife
    
        case 3:
        
        ClearPowers();
        
        Delay(1);
        SetPlayerProperty(0,1,0);
        ActivatorSound("unmorph/strife",127);
        ClearWeapons();
    
        Delay(1);
        
        if (power == 5)     // Entity spawn sequence
        {
			if(GetCVar("outcast_hitbox"))
				GiveInventory("EntityMorpherHitbox",1);
			else
				GiveInventory("EntityMorpher",1);
            
            Delay(1);
            
            if(!random(0,255))
                AmbientSound("entity/taunt",127);
                
            SetActorState(0,"Init");
            GiveInventory("MonRadSuit",1);
			GiveInventory("MonTempInvul",1);
			GiveInventory("IsStrife",1);
            VerifySpecies();
	
			if(hexenarmor[me()] > 0)
			{
				GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
				hexenarmor[me()] = 0;
			}
                
            terminate;
        }
            
        else if(!subpower)
        {
			if(!power)
				GiveInventory("PeasantMorpher",1);
			else if(power == 2)
				GiveInventory("BeggarMorpher",1);
			else
				GiveInventory("RebelMorpher",1);
        }
        
        else
		{
			if(GetCVar("outcast_hitbox"))
				GiveInventory(powermorphstrfhitbox[subpower - 1][power],1);
			else
				GiveInventory(powermorphstrf[subpower - 1][power],1);
		}
			
		GiveInventory("MakeMeShootable",1);
		GiveInventory("IsStrife",1);

    if(GetCVar("outcast_keepmorphs") && healthPercentage) {
			SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
		}
            
        if( (subpower == 2) && (power == 3) )      // Programmer spawn sequence
        {
            Delay(1);
            SetActorState(0,"Init");
            GiveInventory("MonRadSuit",1);
			GiveInventory("MonTempInvul",1);
            VerifySpecies();
	
			if(hexenarmor[me()] > 0)
			{
				GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
				hexenarmor[me()] = 0;
			}
                
            terminate;
        }
		
		else if(power == 4)
			AmbientSound("alienspectre/sight",127);
				
		else if(power == 3)
		{
			if(subpower == 1)
				AmbientSound("inquisitor/sight",127);
				
			else
				AmbientSound("alienspectre/sight",127);
		}
			
		else
			ActivatorSound("*taunt",127);
    
        break;
        
        //////////////// 4 - Virus
    
        case 4:
    
        ClearPowers();
    
        Delay(1);
        SetPlayerProperty(0,1,0);
        ActivatorSound("unmorph/virus",127);
        ClearWeapons();
    
        Delay(1);
        
		if(GetCVar("outcast_hitbox"))
			GiveInventory(powermorphvirshitbox[power],1);
		else
			GiveInventory(powermorphvirs[power],1);
			
		GiveInventory("MakeMeShootable",1);
		GiveInventory("IsVirus",1);

    if(GetCVar("outcast_keepmorphs") && healthPercentage) {
			SetActorProperty(0, APROP_HEALTH, (healthPercentage * GetActorProperty(0, APROP_SPAWNHEALTH) / 10000) + 1);
		}
		
		if(power == 10)
			AmbientSound("leader/sight",127);
		
		else if(power == 11)
			AmbientSound("landcarrier/sight",127);
		
		else if(power == 12) {
			AmbientSound("felix/sight",127);
			GiveInventory("FelixWeaponTracker",1); }
			
		else
			ActivatorSound("*taunt",127);
    
        break;
    
    }
    
    Delay(1);
    
    VerifySpecies();
    
    GiveInventory("MonRadSuit",1);
    //ActivatorSound("cube/morph",127);
    SetPlayerProperty(0,0,0);
    SetPlayerProperty(0,0,1);
	
	if(hexenarmor[me()] > 0)
	{
		GiveInventory("HexenArmor0BonusSingle",hexenarmor[me()]);
		hexenarmor[me()] = 0;
	}
}